name: Generate All Reports PDFs

on:
  push:
    branches:
      - main

jobs:
  build_all_reports:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install 
        run: |
          echo "set man-db/auto-update false" | sudo debconf-communicate
          sudo dpkg-reconfigure man-db
          sudo apt-get update
          sudo apt-get install -y pandoc texlive-latex-base texlive-luatex texlive-xetex texlive-fonts-recommended fonts-noto-cjk --no-install-recommends
          pip install pyyaml

      - name: Build each report PDF
        run: |
          find report -mindepth 1 -maxdepth 1 -type d -exec test -e {}/settings.yaml \; -print > reports.txt
          cat reports.txt
          while read dir; do
            echo "Building report in $dir"
            cd "$dir"

            python3 ../../.github/scripts/generate_cover_md.py settings.yaml cover.md

            rm -f full.md
            md_files=$(python3 ../../.github/scripts/collect_markdown_files.py settings.yaml)

            cat cover.md > full.md
            echo -e "\n\n" >> full.md
            echo "\\newpage" >> full.md
            echo -e "\n\n" >> full.md
            for f in $md_files; do
              cat "$f" >> full.md
              echo -e "\n\n" >> full.md
              echo "\\newpage" >> full.md
              echo -e "\n\n" >> full.md
            done

            font_size=$(grep font_size settings.yaml | cut -d: -f2 | xargs)
            paper_size=$(grep paper_size settings.yaml | cut -d: -f2 | xargs)
            margin=$(grep margin settings.yaml | cut -d: -f2 | xargs)
            output=$(grep output settings.yaml | cut -d: -f2 | xargs)
            toc=$(grep toc settings.yaml | cut -d: -f2 | xargs)

            pandoc full.md \
              -V geometry:margin=$margin \
              -V fontsize=$font_size \
              -V papersize=$paper_size \
              -V mainfont="Noto Serif CJK JP" \
              -V monofont="Noto Sans Mono CJK JP" \
              --pdf-engine=lualatex \
              $( [ "$toc" = "true" ] && echo "--toc" ) \
              -o "$output"

            cd ../../
          done < reports.txt

      - name: Upload PDF to branch
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add report/*.pdf
          git branch pdf
          git checkout pdf
          git commit -m "Update PDFs"
          git push origin pdf --force